stdout of test 'inline06` in directory 'monetdb5/optimizer` itself:


# 18:00:44 >  
# 18:00:44 >   mserver5 "--config=/ufs/mk/monet5/Linux/etc/monetdb5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5//Linux/lib/MonetDB5:/ufs/mk/monet5//Linux/lib/MonetDB5/lib:/ufs/mk/monet5//Linux/lib/MonetDB5/bin" --set "gdk_dbfarm=/ufs/mk/monet5//Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5//Linux/var/MonetDB5/sql_logs"  --set mapi_open=true --set xrpc_open=true --set mapi_port=34223 --set xrpc_port=43286 --set monet_prompt= --trace --dbname=mTests_src_optimizer  inline06.mal
# 18:00:44 >  

# MonetDB 5 server v11.22.0
# This is an unreleased version
# Serving database 'mTests_monetdb5_optimizer', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.590 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.ins.cwi.nl:39909/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-2983/.s.monetdb.39909
# MonetDB/GIS module loaded
# Start processing logs sql/sql_logs version 52200
# Start reading the write-ahead log 'sql_logs/sql/log.4'
# Finished reading the write-ahead log 'sql_logs/sql/log.4'
# Finished processing logs sql/sql_logs
# MonetDB/SQL module loaded
# MonetDB/R   module loaded

Ready.

# 10:12:44 >  
# 10:12:44 >  "mclient" "-lmal" "-ftest" "-Eutf-8" "--host=/var/tmp/mtest-10076" "--port=33029"
# 10:12:44 >  

function user.qry():void;               	#[0] (0)  0 
    b:bat[:int] := bat.new(:int);       	#[1] (0) CMDBATnew 1 <- 2 
    bat.append(b:bat[:int], 1:int);     	#[2] (0) BKCappend_val_wrap 3 <- 1 4 
    X_11:bat[:int] := batcalc.+(b:bat[:int], b:bat[:int]);	#[3] (0) CMDbatADDsignal 14 <- 1 1 
    X_12:int := mmath.rand();           	#[4] (0) MATHrandint 15 
#                                       
    X_11:bat[:int] := batcalc.*(X_11:bat[:int], X_12:int);	#[6] (0) CMDbatMULsignal 14 <- 14 15 
    z:bat[:int] := X_11:bat[:int];      	#[7] (0)  5 <- 14 
    X_19:bat[:int] := batcalc.+(b:bat[:int], 2:int);	#[8] (0) CMDbatADDsignal 22 <- 1 9 
    X_20:int := mmath.rand();           	#[9] (0) MATHrandint 23 
#                                       
    X_19:bat[:int] := batcalc.*(X_19:bat[:int], X_20:int);	#[11] (0) CMDbatMULsignal 22 <- 22 23 
    z:bat[:int] := X_19:bat[:int];      	#[12] (0)  5 <- 22 
end user.qry;                           	#[13] (0)  
#inline               actions= 0 time=17 usec 
#remap                actions= 2 time=313 usec 

# 18:00:44 >  
# 18:00:44 >  Done.
# 18:00:44 >  

