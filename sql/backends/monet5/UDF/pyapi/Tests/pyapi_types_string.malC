
# basic strings
bstr:= bat.new(:str);
bat.append(bstr,"asdf":str);
bat.append(bstr,"sd asd asd asd asd a":str);
bat.append(bstr,"test123":str);
bat.append(bstr,"test":str);
rstr:bat[:str] := pyapi.eval(nil:ptr,"return(arg1)",bstr);
io.print(rstr);

# strings with nil value
bstr:= bat.new(:str);
bat.append(bstr,"asdf":str);
bat.append(bstr,"sd asd asd asd asd a":str);
bat.append(bstr,nil:str);
bat.append(bstr,"test":str);
rstr1:bat[:str] := pyapi.eval(nil:ptr,"return(arg1)",bstr);
io.print(rstr1);

# unicode strings
astr:= bat.new(:str);
bat.append(astr,"Hannes Mühleisen":str);
bat.append(astr,"héllo":str);
bat.append(astr,"éáú üüäãö":str);
bat.append(astr,"幺巾乡阜阝测试一些中国符号":str);
bat.append(astr,"いくつかの日本のシンボルをテストします":str);
rstr2:bat[:str] := pyapi.eval(nil:ptr,"return(arg1)",astr);
io.print(rstr2);

# return python strings
rstr3:bat[:str] := pyapi.eval(nil:ptr,"return([[\"Hello\", \"World\"]])");
io.print(rstr3);

# convert boolean to string
rstr4:bat[:str] := pyapi.eval(nil:ptr,"return([[True, True, False]])");
io.print(rstr4);

# convert bit to string
bbit:= bat.new(:bit);
bat.append(bbit,1:bit);
bat.append(bbit,0:bit);
rbit:bat[:str] := pyapi.eval(nil:ptr,"return(arg1)",bbit);
io.print(rbit);

# convert bte to string
bbte:= bat.new(:bte);
bat.append(bbte,42:bte);
bat.append(bbte,84:bte);
rbte:bat[:str] := pyapi.eval(nil:ptr,"return(arg1)",bbte);
io.print(rbte);

# convert short to string
bsht:= bat.new(:sht);
bat.append(bsht,42:sht);
bat.append(bsht,82:sht);
rsht:bat[:str] := pyapi.eval(nil:ptr,"return(arg1)",bsht);
io.print(rsht);

# convert int to string
bint:= bat.new(:int);
bat.append(bint,1804289383:int);
bat.append(bint,846930886:int);
bat.append(bint,1681692777:int);
bat.append(bint,1714636915:int);
bat.append(bint,nil:int);
rstr5:bat[:str] := pyapi.eval(nil:ptr,"return(arg1)",bint);
io.print(rstr5);

# convert long to string
blng:= bat.new(:lng);
bat.append(blng,1804289383L);
bat.append(blng,846930886L);
rlng:bat[:str] := pyapi.eval(nil:ptr,"return(arg1)",blng);
io.print(rlng);

# convert float to string
bflt:= bat.new(:flt);
bat.append(bflt,18042.89383:flt);
bat.append(bflt,846.930886:flt);
bat.append(bflt,16.81692777:flt);
bat.append(bflt,1714636.915:flt);
bat.append(bflt,nil:flt);
rstr6:bat[:str] := pyapi.eval(nil:ptr,"return(arg1)",bflt);
io.print(rstr6);

# convert dbl to string
bdbl:= bat.new(:dbl);
bat.append(bdbl,18042.89383:dbl);
bat.append(bdbl,846.930886:dbl);
bat.append(bdbl,16.81692777:dbl);
bat.append(bdbl,1714636.915:dbl);
bat.append(bdbl,nil:dbl);
rstr7:bat[:str] := pyapi.eval(nil:ptr,"return(arg1)",bdbl);
io.print(rstr7);

# convert string to bit
bstr:= bat.new(:str);
bat.append(bstr,"1":str);
bat.append(bstr,"0":str);
rbit8:bat[:bit] := pyapi.eval(nil:ptr,"return(arg1)",bstr);
io.print(rbit8);

# convert string to bte
bstr:= bat.new(:str);
bat.append(bstr,"42":str);
bat.append(bstr,"84":str);
rbte9:bat[:bte] := pyapi.eval(nil:ptr,"return(arg1)",bstr);
io.print(rbte9);

# convert string to short
bstr:= bat.new(:str);
bat.append(bstr,"42":str);
bat.append(bstr,"82":str);
rsht10:bat[:sht] := pyapi.eval(nil:ptr,"return(arg1)",bstr);
io.print(rsht10);

# convert string to int
bstr:= bat.new(:str);
bat.append(bstr,"1804289383":str);
bat.append(bstr,"846930886":str);
bat.append(bstr,"1681692777":str);
bat.append(bstr,"1714636915":str);
bat.append(bstr,nil:str);
rstr11:bat[:int] := pyapi.eval(nil:ptr,"return(arg1)",bstr);
io.print(rstr11);

# convert string to oid
bstr:= bat.new(:str);
bat.append(bstr,"18042893":str);
bat.append(bstr,"8469308":str);
rwrd13:bat[:oid] := pyapi.eval(nil:ptr,"return(arg1)",bstr);
io.print(rwrd13);

# convert string to long
bstr:= bat.new(:str);
bat.append(bstr,"1804289383":str);
bat.append(bstr,"846930886":str);
rlng14:bat[:lng] := pyapi.eval(nil:ptr,"return(arg1)",bstr);
io.print(rlng14);

# convert string to float
bstr:= bat.new(:str);
bat.append(bstr,"18042.89383":str);
bat.append(bstr,"846.930886":str);
bat.append(bstr,"16.81692777":str);
bat.append(bstr,"1714636.915":str);
bat.append(bstr,nil:str);
rstr15:bat[:flt] := pyapi.eval(nil:ptr,"return(arg1)",bstr);
io.print(rstr15);

# convert string to dbl
bstr:= bat.new(:str);
bat.append(bstr,"18042.89383":str);
bat.append(bstr,"846.930886":str);
bat.append(bstr,"16.81692777":str);
bat.append(bstr,"1714636.915":str);
bat.append(bstr,nil:str);
rstr16:bat[:dbl] := pyapi.eval(nil:ptr,"return(arg1)",bstr);
io.print(rstr16);
